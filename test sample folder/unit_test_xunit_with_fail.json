{
  "testsuites": {
    "testsuite": [
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test Setup",
          "tests": "4",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#1 Was authenticate test user with TIAM successful?"
            }
          },
          {
            "$": {
              "name": "#2 Authentication succeeded for mock user: idsb3t1@us.ibm.com"
            }
          },
          {
            "$": {
              "name": "#3 Was authenticate test user with TIAM successful?"
            }
          },
          {
            "$": {
              "name": "#4 Authentication succeeded for mock user: idsb3t4@us.ibm.com"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test cleanup",
          "tests": "16",
          "failures": "10",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#5 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Put-repo_name"
            }
          },
          {
            "$": {
              "name": "#6 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Unbind-Other-Org"
            }
          },
          {
            "$": {
              "name": "#7 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Put-clone"
            }
          },
          {
            "$": {
              "name": "#8 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Put-repo_url"
            }
          },
          {
            "$": {
              "name": "#9 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Put-clone-with-issues"
            }
          },
          {
            "$": {
              "name": "#10 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Put-clone-without-issues"
            }
          },
          {
            "$": {
              "name": "#11 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Unbind"
            }
          },
          {
            "$": {
              "name": "#12 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/testRepo-Put-repo_name_without_issues"
            }
          },
          {
            "$": {
              "name": "#13 Was the following repo cleaned up? https://github.stage1.ng.bluemix.net/api/v3/repos/idsb3t4/fork-test"
            }
          },
          {
            "$": {
              "name": "#14 Was the following service instance cleaned up? 1234567"
            }
          },
          {
            "$": {
              "name": "#15 Was the following service instance cleaned up? 1234"
            }
          },
          {
            "$": {
              "name": "#16 Was the following service instance cleaned up? 123456"
            }
          },
          {
            "$": {
              "name": "#17 Was the following service instance cleaned up? 12345"
            }
          },
          {
            "$": {
              "name": "#18 Was the following service instance cleaned up? 123456789"
            }
          },
          {
            "$": {
              "name": "#19 Was the following service instance cleaned up? 1234567890"
            }
          },
          {
            "$": {
              "name": "#20 Was the following service instance cleaned up? 12345678"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test Authentication",
          "tests": "4",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#21 did the authentication request with no Auth header fail?"
            }
          },
          {
            "$": {
              "name": "#22 did the authentication request with no bearer in the Auth header fail?"
            }
          },
          {
            "$": {
              "name": "#23 did the authentication request with an empty Auth header fail?"
            }
          },
          {
            "$": {
              "name": "#24 did the authentication request an invalid token in the Auth header fail?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance w/o a service_id",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#25 did the put instance call with no service id fail?"
            }
          },
          {
            "$": {
              "name": "#26 Did the put instance call with no service id fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance w/ an empty or an invalid org id",
          "tests": "3",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#27 did the put instance call fail with no organization_guid?"
            }
          },
          {
            "$": {
              "name": "#28 Did the put instance call with no organization_guid fail with the correct error message?"
            }
          },
          {
            "$": {
              "name": "#29 did the put instance call fail when the user is not part of the orginization?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance w/o a repo_name or repo_url",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#30 did the put instance call fail with no repo_name or repo_url?"
            }
          },
          {
            "$": {
              "name": "#31 Did the put instance call with no repo_name or repo_url fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#32 did the put instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#33 did the put instance call return an instance_id?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with invalid instance id",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#34 Did the patch instance call fail for non-existant id?"
            }
          },
          {
            "$": {
              "name": "#35 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with no properties",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#36 Did the patch instance call fail for no properties?"
            }
          },
          {
            "$": {
              "name": "#37 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with non-allowable instance properties",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#38 Did the patch instance call fail for non-allowed instance properties?"
            }
          },
          {
            "$": {
              "name": "#39 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with non-allowable parameters properties",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#40 Did the patch instance call fail for non-allowed parameters properties?"
            }
          },
          {
            "$": {
              "name": "#41 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with invalid repo_url format",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#42 Did the patch instance call fail for invalid repo_url format?"
            }
          },
          {
            "$": {
              "name": "#43 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with no repo_url",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#44 Did the patch instance call fail for no repo_url?"
            }
          },
          {
            "$": {
              "name": "#45 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with non-existant repo",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#46 Did the patch instance call fail for non-existant repo_url?"
            }
          },
          {
            "$": {
              "name": "#47 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance from another org",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#48 Did the patch instance call fail?"
            }
          },
          {
            "$": {
              "name": "#49 Did the patch instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with a valid repo_url",
          "tests": "10",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#50 Did the patch instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#51 Did the patch instance call return parameters?"
            }
          },
          {
            "$": {
              "name": "#52 Did the patch instance call update the repo_url?"
            }
          },
          {
            "$": {
              "name": "#53 Did the patch instance call update the owner_id?"
            }
          },
          {
            "$": {
              "name": "#54 Did the patch instance call update the repo_name?"
            }
          },
          {
            "$": {
              "name": "#55 Did the patch instance call update the label?"
            }
          },
          {
            "$": {
              "name": "#56 Did the patch instance call return extra_capabilities?"
            }
          },
          {
            "$": {
              "name": "#57 Did the patch instance call update the extra capability dashboard url?"
            }
          },
          {
            "$": {
              "name": "#58 Did the patch instance call update the extra capability label?"
            }
          },
          {
            "$": {
              "name": "#59 Did the patch instance call update the extra capability enabled flag?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with a valid repo_url without .git extension",
          "tests": "10",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#60 Did the patch instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#61 Did the patch instance call return parameters?"
            }
          },
          {
            "$": {
              "name": "#62 Did the patch instance call update the repo_url?"
            }
          },
          {
            "$": {
              "name": "#63 Did the patch instance call update the owner_id?"
            }
          },
          {
            "$": {
              "name": "#64 Did the patch instance call update the repo_name?"
            }
          },
          {
            "$": {
              "name": "#65 Did the patch instance call update the label?"
            }
          },
          {
            "$": {
              "name": "#66 Did the patch instance call return extra_capabilities?"
            }
          },
          {
            "$": {
              "name": "#67 Did the patch instance call update the extra capability dashboard url?"
            }
          },
          {
            "$": {
              "name": "#68 Did the patch instance call update the extra capability label?"
            }
          },
          {
            "$": {
              "name": "#69 Did the patch instance call update the extra capability enabled flag?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PATCH instance with has_issues",
          "tests": "4",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#70 Did the patch instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#71 Did the patch instance call return parameters?"
            }
          },
          {
            "$": {
              "name": "#72 Did the patch instance call return extra_capabilities?"
            }
          },
          {
            "$": {
              "name": "#73 Did the patch instance call update the extra capability enabled flag?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test GET service instance from another org",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#74 Did the get instance call fail?"
            }
          },
          {
            "$": {
              "name": "#75 Did the get instance call fail with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test GET service instance",
          "tests": "11",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#76 Did the get instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#77 Did the get instance call return the instance_id?"
            }
          },
          {
            "$": {
              "name": "#78 Did the get instance call return the organization_guid?"
            }
          },
          {
            "$": {
              "name": "#79 Did the get instance call return the dashboard_url?"
            }
          },
          {
            "$": {
              "name": "#80 Did the get instance call return the repo_url?"
            }
          },
          {
            "$": {
              "name": "#81 Did the get instance call return the owner_id?"
            }
          },
          {
            "$": {
              "name": "#82 Did the get instance call return the repo_name?"
            }
          },
          {
            "$": {
              "name": "#83 Did the get instance call return the label?"
            }
          },
          {
            "$": {
              "name": "#84 Did the get instance call return the api_root_url?"
            }
          },
          {
            "$": {
              "name": "#85 Did the get instance call return the token_url?"
            }
          },
          {
            "$": {
              "name": "#86 Did the get instance call return the extra_capabilties?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT bind instance to toolchain",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#87 did the bind instance to toolchain call succeed?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT bind instance to toolchain w/ other org",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#88 did the instance with other org fail to bind to toolchain?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance that still has toolchains bound",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#89 did the delete instance call fail because it was still bound?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE unbind instance from toolchain",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#90 did the unbind instance call succeed?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance w/ other org",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#91 did the instance with other org fail to delete?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#92 did the delete instance call succeed?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT bind instance that does not exist to toolchain",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#93 did the bind instance that does not exist to toolchain call fail?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance that does not exist",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#94 did the delete instance call fail because it does not exist?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE unbind instance that does not exist from toolchain",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#95 did the unbind instance from toolchain call fail beacause it does not exist?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE unbind instance that does not exist from all toolchains",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#96 did the unbind instance from all toolchains call fail beacause it does not exist?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE unbind instance from toolchain w/ other org",
          "tests": "7",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#97 did the put instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#98 did the put instance call return an instance_id?"
            }
          },
          {
            "$": {
              "name": "#99 did the bind instance to toolchain call succeed?"
            }
          },
          {
            "$": {
              "name": "#100 did the unbind instance call with other org fail?"
            }
          },
          {
            "$": {
              "name": "#101 did the delete instance call fail because it was still bound?"
            }
          },
          {
            "$": {
              "name": "#102 did the unbind instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#103 did the delete instance call succeed?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance w/ repo_url",
          "tests": "4",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#104 did the put instance call succeed with a repo_name?"
            }
          },
          {
            "$": {
              "name": "#105 did the put instance call with a repo_name return an instance_id?"
            }
          },
          {
            "$": {
              "name": "#106 did the put instance call succeed with a repo_url?"
            }
          },
          {
            "$": {
              "name": "#107 did the put instance call with a repo_url return an instance_id?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance provisioned for a GitHub repo that already exists",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#108 did the put instance call fail for a GitHub repo that already exists?"
            }
          },
          {
            "$": {
              "name": "#109 did the put instance call for a GitHub repo that already exists return a description (error)?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance provisioned for a GitHub repo fork",
          "tests": "4",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#110 did the put instance call succeed with a repo_url and fork set to true?"
            }
          },
          {
            "$": {
              "name": "#111 did the put instance call with a repo_url and fork set to true return an instance_id?"
            }
          },
          {
            "$": {
              "name": "#112 did the put instance call for a fork that already exists fail?"
            }
          },
          {
            "$": {
              "name": "#113 did the put instance call for a fork that already exists return a description (error)?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance provisioned for a GitHub repo clone",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#114 did the put instance call succeed with a repo_name, repo_url, and type set to \"clone\"?"
            }
          },
          {
            "$": {
              "name": "#115 did the put instance call with a repo_name, repo_url, and type set to \"clone\" return an instance_id?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance provisioned for a GitHub repo clone with and without issues",
          "tests": "4",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#116 did the put instance call succeed with a repo_name, repo_url, has_issues=false and type=\"clone\"?"
            }
          },
          {
            "$": {
              "name": "#117 did the put instance call with a repo_name, repo_url, has_issues=false and type=\"clone\" return an instance_id?"
            }
          },
          {
            "$": {
              "name": "#118 did the put instance call succeed with a repo_name, repo_url, has_issues=true and type=\"clone\"?"
            }
          },
          {
            "$": {
              "name": "#119 did the put instance call with a repo_name, repo_url, has_issues=true and type=\"clone\" return an instance_id?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instances provisioned w/ clone",
          "tests": "3",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#120 did the delete instance call succeed for instance created with clone and has_issues=true?"
            }
          },
          {
            "$": {
              "name": "#121 did the delete instance call succeed for instance created with clone and has_issues=false?"
            }
          },
          {
            "$": {
              "name": "#122 did the delete instance call succeed for the instance created with clone?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance provisioned w/ fork",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#123 did the delete instance call succeed for instance created with repo_url?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance provisioned w/ repo_url",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#124 did the delete instance call succeed for instance created with repo_url?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance provisioned w/ repo_name",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#125 did the delete instance call succeed for instance created with repo_name?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance w/ repo_url that does not exist",
          "tests": "2",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#126 did the put instance call fail for repo_url that does not exist?"
            }
          },
          {
            "$": {
              "name": "#127 did the put instance call for repo_url that does not exist return a description (error)?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE unbind instance from toolchain",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#128 did the put instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#129 did the put instance call return an instance_id?"
            }
          },
          {
            "$": {
              "name": "#130 did the bind instance to toolchain call succeed?"
            }
          },
          {
            "$": {
              "name": "#131 did the unbind instance call succeed?"
            }
          },
          {
            "$": {
              "name": "#132 did the delete instance call succeed?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test PUT instance w/ repo_name and has_issues disabled",
          "tests": "3",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#133 did the put instance call succeed with a repo_name?"
            }
          },
          {
            "$": {
              "name": "#134 was the correct label set?"
            }
          },
          {
            "$": {
              "name": "#135 was the enabled setting set to false?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test DELETE instance provisioned w/ repo_name and has_issues disabled",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#136 did the delete instance call succeed for instance created with repo_name and has_issues disabled?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate w/o properties",
          "tests": "4",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#137 did the validate call fail w/o properties?"
            }
          },
          {
            "$": {
              "name": "#138 Did the validate call fail w/o properties with the correct error message?"
            }
          },
          {
            "$": {
              "name": "#139 did the validate call fail w/o properties?"
            }
          },
          {
            "$": {
              "name": "#140 Did the validate call fail w/o properties with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for invalid or empty validationType",
          "tests": "6",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#141 did the validate call fail for an empty validationType?"
            }
          },
          {
            "$": {
              "name": "#142 Did the validate call fail for an empty validationType with the correct error message?"
            }
          },
          {
            "$": {
              "name": "#143 did the validate call fail for an empty validationType?"
            }
          },
          {
            "$": {
              "name": "#144 Did the validate call fail for an empty validationType with the correct error message?"
            }
          },
          {
            "$": {
              "name": "#145 did the validate call fail for an invalid validationType?"
            }
          },
          {
            "$": {
              "name": "#146 Did the validate call fail for an invalid validationType with the correct error message?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create w/o a repo_name or repo_url and with fork",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#147 did the validate call succeed with no repo_name or repo_url?"
            }
          },
          {
            "$": {
              "name": "#148 Did the validate call with no repo_name or repo_url succeed with the correct validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#149 Did the validate call with no repo_name or repo_url succeed with the correct validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#150 Did the validate call with no repo_name or repo_url and with type succeed with the correct validation message for type?"
            }
          },
          {
            "$": {
              "name": "#151 Did the validate call with no repo_name or repo_url succeed with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create with both a repo_name and a repo_url and with fork",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#152 did the validate call succeed with both a repo_name and a repo_url?"
            }
          },
          {
            "$": {
              "name": "#153 Did the validate call with both a repo_name and a repo_url succeed with the correct validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#154 Did the validate call with both a repo_name and a repo_url succeed with the correct validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#155 Did the validate call with fork succeed with the correct validation message for type?"
            }
          },
          {
            "$": {
              "name": "#156 Did the validate call with both a repo_name and a repo_url and with fork succeed with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create with has_issues used with repo_url",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#157 did the validate call fail with has_issues used with repo_url?"
            }
          },
          {
            "$": {
              "name": "#158 Did the validate call with has_issues used with repo_url succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#159 Did the validate call with has_issues used with repo_url succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#160 Did the validate call with has_issues used with repo_url succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#161 Did the validate call with has_issues and repo_url succeed with the correct validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create with repo_name",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#162 did the validate call with a repo_name succeed?"
            }
          },
          {
            "$": {
              "name": "#163 did the validate call with a repo_name succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#164 Did the validate call with a repo_name succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#165 Did the validate call with a repo_name succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#166 Did the validate call with a repo_name succeed with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create with an existing repo_name",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#167 did the validate call fail with an existing repo_name?"
            }
          },
          {
            "$": {
              "name": "#168 Did the validate call with an existing repo_name succeed with the correct validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#169 Did the validate call with an existing repo_name succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#170 Did the validate call with an existing repo_name succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#171 Did the validate call with an existing repo_name succeed with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create with a repo_url that does not exists or is invalid",
          "tests": "10",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#172 did the validate call pass with an invalid repo_url?"
            }
          },
          {
            "$": {
              "name": "#173 Did the validate call for create with an invalid repo_url succeed with the correct validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#174 Did the validate call for create with an invalid repo_url succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#175 Did the validate call for create with an invalid repo_url succeed with the correct validation message for type?"
            }
          },
          {
            "$": {
              "name": "#176 Did the validate call for create with an invalid repo_url with no validation message for has_issues?"
            }
          },
          {
            "$": {
              "name": "#177 did the validate call pass with a repo_url that does not exists?"
            }
          },
          {
            "$": {
              "name": "#178 Did the validate call with a repo_url that does not exists succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#179 Did the validate call with a repo_url that does not exists succeed with the correct validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#180 Did the validate call with a repo_url that does not exists succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#181 Did the validate call with a repo_url that does not exists succeed with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create with a repo_url, repo_name, and clone",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#182 did the validate call pass for create with a repo_url, repo_name, and clone?"
            }
          },
          {
            "$": {
              "name": "#183 Did the validate call with a repo_url, repo_name, and clone succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#184 Did the validate call with a repo_url, repo_name, and clone succeed with the correct validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#185 Did the validate call with a repo_url, repo_name, and clone succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#186 Did the validate call with a repo_url, repo_name, and clone succeed with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for create with clone but without a repo_url or repo_name",
          "tests": "10",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#187 did the validate call pass for create with clone but without a repo_url?"
            }
          },
          {
            "$": {
              "name": "#188 Did the validate call for create with clone but without a repo_url succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#189 Did the validate call for create with clone but without a repo_url succeed with the correct validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#190 Did the validate call for create with clone but without a repo_url succeedwith the correct validation message for type?"
            }
          },
          {
            "$": {
              "name": "#191 Did the validate call for create with clone but without a repo_url with no validation message for has_issues?"
            }
          },
          {
            "$": {
              "name": "#192 did the validate call pass for create with clone but without a repo_name?"
            }
          },
          {
            "$": {
              "name": "#193 Did the validate call for create with clone but without a repo_name succeed with the correct validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#194 Did the validate call for create with clone but without a repo_name succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#195 Did the validate call for create with clone but without a repo_name succeed with the correct validation message for type?"
            }
          },
          {
            "$": {
              "name": "#196 Did the validate call for create with clone but without a repo_name with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for update with has_issues used with repo_url",
          "tests": "5",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#197 did the validate call pass for update with has_issues used with repo_url?"
            }
          },
          {
            "$": {
              "name": "#198 Did the validate call for update with has_issues used with repo_url succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#199 Did the validate call for update with has_issues used with repo_url succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#200 Did the validate call for update with has_issues used with repo_url succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#201 Did the validate call for update with has_issues used with repo_url succeed with no validation message message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test POST /github/validate for update with a repo_url that does not exists or is invalid",
          "tests": "20",
          "failures": "0",
          "errors": "0"
        },
        "testcase": [
          {
            "$": {
              "name": "#202 did the validate call pass with a repo_url that is empty?"
            }
          },
          {
            "$": {
              "name": "#203 Did the validate call with a repo_url that is empty succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#204 Did the validate call with a repo_url that is empty succeed with the correct validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#205 Did the validate call with a repo_url that is empty succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#206 Did the validate call with a repo_url that is empty succeed with no validation message for has_issues?"
            }
          },
          {
            "$": {
              "name": "#207 did the validate call pass with an invalid repo_url?"
            }
          },
          {
            "$": {
              "name": "#208 Did the validate call for create with an invalid repo_url succeed with the correct validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#209 Did the validate call for create with an invalid repo_url succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#210 Did the validate call for create with an invalid repo_url succeed with the correct validation message for type?"
            }
          },
          {
            "$": {
              "name": "#211 Did the validate call for create with an invalid repo_url with no validation message for has_issues?"
            }
          },
          {
            "$": {
              "name": "#212 did the validate call pass with a repo_url hosted on github.com?"
            }
          },
          {
            "$": {
              "name": "#213 Did the validate call for create with a repo_url hosted on github.com succeed with the correct validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#214 Did the validate call for create with a repo_url hosted on github.com succeed with no validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#215 Did the validate call for create with a repo_url hosted on github.com succeed with the correct validation message for type?"
            }
          },
          {
            "$": {
              "name": "#216 Did the validate call for create with a repo_url hosted on github.com with no validation message for has_issues?"
            }
          },
          {
            "$": {
              "name": "#217 did the validate call pass with a repo_url that does not exists?"
            }
          },
          {
            "$": {
              "name": "#218 Did the validate call with a repo_url that does not exists succeed with no validation message for repo_name?"
            }
          },
          {
            "$": {
              "name": "#219 Did the validate call with a repo_url that does not exists succeed with the correct validation message for repo_url?"
            }
          },
          {
            "$": {
              "name": "#220 Did the validate call with a repo_url that does not exists succeed with no validation message for type?"
            }
          },
          {
            "$": {
              "name": "#221 Did the validate call with a repo_url that does not exists succeed with no validation message for has_issues?"
            }
          }
        ]
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test GET status",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#222 did the get status call succeed?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test GET version",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#223 did the get version call succeed?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test GET GitHub token",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#224 did the get GitHub token call succeed?"
          }
        }
      },
      {
        "$": {
          "package": "otc-github-broker",
          "name": "GitHub Broker - Test GET GitHub API url",
          "tests": "1",
          "failures": "0",
          "errors": "0"
        },
        "testcase": {
          "$": {
            "name": "#225 did the get GitHub API url call succeed?"
          }
        }
      }
    ]
  }
}